// <auto-generated />
using System;
using BarterHash.Infra.Repository.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarterHash.Infra.Repository.Migrations.Purchase
{
    [DbContext(typeof(PurchaseContext))]
    [Migration("20220316232228_InitialPurchaseTable")]
    partial class InitialPurchaseTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BarterHash.Domain.Entities.Purchase.Purchase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CostumerWalletAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.Property<string>("EcommerceWalletAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.Property<string>("Observation")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<long>("PurchaseCheckId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchaseEventId")
                        .HasColumnType("bigint");

                    b.Property<string>("PurchaseIdentifier")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<long?>("PurchaseNoticeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseCheckId")
                        .IsUnique();

                    b.HasIndex("PurchaseEventId")
                        .IsUnique()
                        .HasFilter("[PurchaseEventId] IS NOT NULL");

                    b.HasIndex("PurchaseNoticeId")
                        .IsUnique()
                        .HasFilter("[PurchaseNoticeId] IS NOT NULL");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("BarterHash.Domain.Entities.Purchase.PurchaseCheck", b =>
                {
                    b.Property<long>("PurchaseCheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PurchaseCheckId"), 1L, 1);

                    b.Property<int>("CheckOverCounter")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FirstCheckDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastCheckTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PurchaseCheckId");

                    b.ToTable("PurchaseChecks");
                });

            modelBuilder.Entity("BarterHash.Domain.Entities.Purchase.PurchaseEvent", b =>
                {
                    b.Property<long>("PurchaseEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PurchaseEventId"), 1L, 1);

                    b.Property<DateTime>("DateTimePurchasePayment")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchaseAmountPaidInEther")
                        .HasPrecision(28, 18)
                        .HasColumnType("decimal(28,18)");

                    b.HasKey("PurchaseEventId");

                    b.ToTable("PurchaseEvents");
                });

            modelBuilder.Entity("BarterHash.Domain.Entities.Purchase.PurchaseEventFail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BlockHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("LogAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.Property<string>("Observation")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TransactionHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("PurchaseEventFails");
                });

            modelBuilder.Entity("BarterHash.Domain.Entities.Purchase.PurchaseNotice", b =>
                {
                    b.Property<long>("PurchaseNoticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PurchaseNoticeId"), 1L, 1);

                    b.Property<DateTime>("DateTimePurchaseNotice")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimaryCurrency")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal>("PurchaseAmountInPrimaryCurrency")
                        .HasPrecision(38, 8)
                        .HasColumnType("decimal(38,8)");

                    b.HasKey("PurchaseNoticeId");

                    b.ToTable("PurchaseNotices");
                });

            modelBuilder.Entity("BarterHash.Domain.Entities.Purchase.Purchase", b =>
                {
                    b.HasOne("BarterHash.Domain.Entities.Purchase.PurchaseCheck", "PurchaseCheck")
                        .WithOne("Purchase")
                        .HasForeignKey("BarterHash.Domain.Entities.Purchase.Purchase", "PurchaseCheckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarterHash.Domain.Entities.Purchase.PurchaseEvent", "PurchaseEvent")
                        .WithOne("Purchase")
                        .HasForeignKey("BarterHash.Domain.Entities.Purchase.Purchase", "PurchaseEventId");

                    b.HasOne("BarterHash.Domain.Entities.Purchase.PurchaseNotice", "PurchaseNotice")
                        .WithOne("Purchase")
                        .HasForeignKey("BarterHash.Domain.Entities.Purchase.Purchase", "PurchaseNoticeId");

                    b.Navigation("PurchaseCheck");

                    b.Navigation("PurchaseEvent");

                    b.Navigation("PurchaseNotice");
                });

            modelBuilder.Entity("BarterHash.Domain.Entities.Purchase.PurchaseCheck", b =>
                {
                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("BarterHash.Domain.Entities.Purchase.PurchaseEvent", b =>
                {
                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("BarterHash.Domain.Entities.Purchase.PurchaseNotice", b =>
                {
                    b.Navigation("Purchase");
                });
#pragma warning restore 612, 618
        }
    }
}
